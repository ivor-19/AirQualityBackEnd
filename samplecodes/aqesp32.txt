#include <WiFi.h>
#include <HTTPClient.h>
#include <DHT.h>

#define LEDPIN_BLUE 18
#define LEDPIN_YELLOW 19
const int BUTTONPIN = 16;  

int buttonState = 0; 
unsigned long lastButtonPress = 0;
unsigned long debounceDelay = 300; // 300ms debounce

const char *ssid = "Wokwi-GUEST";
const char *password = "";

const String apiUrl = "https://air-quality-back-end-v2.vercel.app/aqReadings/updateAQReadings/";
const String assetModel = "modelx21";

void setup() {
  Serial.begin(115200);  
  Serial.print("Connecting to WiFi");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(100);
    Serial.print(".");
  }
  Serial.println("Connected to WiFi");
  pinMode(BUTTONPIN, INPUT);
  pinMode(LEDPIN_BLUE, OUTPUT);
  pinMode(LEDPIN_YELLOW, OUTPUT);
  delay(50);
}

void loop() {
  unsigned long currentMillis = millis();
  buttonState = digitalRead(BUTTONPIN);

  if (buttonState == HIGH && (currentMillis - lastButtonPress > debounceDelay)) {
    lastButtonPress = currentMillis;
    digitalWrite(LEDPIN_BLUE, HIGH);
    String status = "on";
    float temperature = random(200, 300) / 10.0;

    float pm2_5 = random(20, 2000) / 10.0;
    float co = random(20, 2000) / 10.0;
    float no2 = random(20, 2000) / 10.0;
    float aqi = max(pm2_5, max(co, no2));
    aqi = round(aqi);

    Serial.println("Reading...");
    sendDataToAPI(assetModel, aqi, pm2_5, co, no2, status);
    Serial.println("Updated Successfully...");
    Serial.print("STATUS: ");
    Serial.println(status);
    Serial.print("AQI: ");
    Serial.print(aqi);
    Serial.print(", PM 2.5: ");
    Serial.print(pm2_5);
    Serial.print(", CO: ");
    Serial.print(co);
    Serial.print(", NO2: ");
    Serial.print(no2);
  

    digitalWrite(LEDPIN_YELLOW, LOW);
  } else {
    Serial.println("OFF!");
    digitalWrite(LEDPIN_BLUE, LOW);
    digitalWrite(LEDPIN_YELLOW, LOW);
    delay(2000);
  }
}

void sendDataToAPI(String assetModel, float aqi, float pm2_5, float co, float no2, String status) {
  HTTPClient http;

  // Start HTTP request
  String fullUrl = apiUrl + assetModel;
  http.begin(fullUrl);

  // Set the content type to JSON
  http.addHeader("Content-Type", "application/json");

  // Create a JSON body
   String jsonBody = "{\"aqi\":" + String(aqi, 2) + ",\"pm2_5\":" + String(pm2_5, 2) + 
                    ",\"co\":" + String(co, 2) + ",\"no2\":" + String(no2, 2) + 
                    ",\"status\":\"" + status + "\"}";


  // Serial.print("JSON Body: ");
  // Serial.println(jsonBody); // Debugging: print JSON body
  // Send HTTP POST request
  int httpResponseCode = http.POST(jsonBody);

  // Check the response
  if (httpResponseCode > 0) {
    Serial.print("HTTP Response code: ");
    Serial.println(httpResponseCode);
  } else {
    Serial.print("Error code: ");
    Serial.println(httpResponseCode);
  }

  // Close the connection
  http.end();
}
